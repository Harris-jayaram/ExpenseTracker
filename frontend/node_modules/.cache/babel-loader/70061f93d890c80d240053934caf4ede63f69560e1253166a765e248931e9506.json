{"ast":null,"code":"var _jsxFileName = \"C:\\\\Expense Calculator Mern Stack\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(false); // Dark mode state\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n\n  // Calculate total income\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  // Fetch incomes from API\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  // Add new income\n  const addIncome = async income => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-income`, income);\n      getIncomes();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  // Delete income\n  const deleteIncome = async id => {\n    try {\n      const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n      getIncomes();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = () => {\n    let totalExpenses = 0;\n    expenses.forEach(expense => {\n      totalExpenses = totalExpenses + expense.amount;\n    });\n    return totalExpenses;\n  };\n\n  // Fetch expenses from API\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      setExpenses(response.data);\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  // Add new expense\n  const addExpense = async expense => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-expense`, expense);\n      getExpenses();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  // Delete expense\n  const deleteExpense = async id => {\n    try {\n      const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n      getExpenses();\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  // Calculate total balance\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Get transaction history (combined incomes and expenses)\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      addExpense,\n      getExpenses,\n      expenses,\n      deleteExpense,\n      totalIncome,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError,\n      darkMode,\n      toggleDarkMode // Include toggleDarkMode in context value\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalProvider, \"Dx+VIuvoHWKmez8s9jfH2P2fhUI=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","BASE_URL","GlobalContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","darkMode","setDarkMode","toggleDarkMode","prevMode","totalIncome","forEach","income","amount","getIncomes","response","get","data","err","message","addIncome","post","deleteIncome","id","res","delete","totalExpenses","expense","getExpenses","addExpense","deleteExpense","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Expense Calculator Mern Stack/expense-tracker_fullstack/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(false); // Dark mode state\r\n\r\n  // Toggle dark mode\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(prevMode => !prevMode);\r\n  };\r\n\r\n  // Calculate total income\r\n  const totalIncome = () => {\r\n    let totalIncome = 0;\r\n    incomes.forEach(income => {\r\n      totalIncome = totalIncome + income.amount;\r\n    });\r\n    return totalIncome;\r\n  };\r\n\r\n  // Fetch incomes from API\r\n  const getIncomes = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}get-incomes`);\r\n      setIncomes(response.data);\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  // Add new income\r\n  const addIncome = async income => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}add-income`, income);\r\n      getIncomes();\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  // Delete income\r\n  const deleteIncome = async id => {\r\n    try {\r\n      const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\r\n      getIncomes();\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  // Calculate total expenses\r\n  const totalExpenses = () => {\r\n    let totalExpenses = 0;\r\n    expenses.forEach(expense => {\r\n      totalExpenses = totalExpenses + expense.amount;\r\n    });\r\n    return totalExpenses;\r\n  };\r\n\r\n  // Fetch expenses from API\r\n  const getExpenses = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}get-expenses`);\r\n      setExpenses(response.data);\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  // Add new expense\r\n  const addExpense = async expense => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}add-expense`, expense);\r\n      getExpenses();\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  // Delete expense\r\n  const deleteExpense = async id => {\r\n    try {\r\n      const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\r\n      getExpenses();\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    }\r\n  };\r\n\r\n  // Calculate total balance\r\n  const totalBalance = () => {\r\n    return totalIncome() - totalExpenses();\r\n  };\r\n\r\n  // Get transaction history (combined incomes and expenses)\r\n  const transactionHistory = () => {\r\n    const history = [...incomes, ...expenses];\r\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n    return history.slice(0, 3);\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        addIncome,\r\n        getIncomes,\r\n        incomes,\r\n        deleteIncome,\r\n        addExpense,\r\n        getExpenses,\r\n        expenses,\r\n        deleteExpense,\r\n        totalIncome,\r\n        totalExpenses,\r\n        totalBalance,\r\n        transactionHistory,\r\n        error,\r\n        setError,\r\n        darkMode,\r\n        toggleDarkMode, // Include toggleDarkMode in context value\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(GlobalContext);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}