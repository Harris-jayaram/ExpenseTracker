{"ast":null,"code":"var _jsxFileName = \"C:\\\\Expense Calculator Mern Stack\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Income\\\\Income.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\nimport { useDarkMode } from '../../path/to/your/DarkModeContext'; // Update this path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Income() {\n  _s();\n  const {\n    addIncome,\n    incomes,\n    getIncomes,\n    deleteIncome,\n    totalIncome\n  } = useGlobalContext();\n  const {\n    darkMode\n  } = useDarkMode(); // Access darkMode state from context\n\n  useEffect(() => {\n    getIncomes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(IncomeStyled, {\n    darkMode: darkMode,\n    children: /*#__PURE__*/_jsxDEV(InnerLayout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Incomes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"total-income\",\n        children: [\"Total Income: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u20B9\", totalIncome()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"income-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"incomes\",\n          children: incomes.map(income => /*#__PURE__*/_jsxDEV(IncomeItem, {\n            id: income._id,\n            title: income.title,\n            description: income.description,\n            amount: income.amount,\n            date: income.date,\n            type: income.type,\n            category: income.category,\n            indicatorColor: \"var(--color-green)\",\n            deleteItem: deleteIncome\n          }, income._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Income, \"nFlP9ci3OTylyvSG7Ukpk1Q1+3o=\", false, function () {\n  return [useGlobalContext, useDarkMode];\n});\n_c = Income;\nconst IncomeStyled = styled.div`\n    display: flex;\n    overflow: auto;\n    background: ${_ref => {\n  let {\n    darkMode\n  } = _ref;\n  return darkMode ? '#333' : '#FCF6F9';\n}};\n    color: ${_ref2 => {\n  let {\n    darkMode\n  } = _ref2;\n  return darkMode ? '#fff' : '#000';\n}};\n    .total-income {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: ${_ref3 => {\n  let {\n    darkMode\n  } = _ref3;\n  return darkMode ? '#444' : '#FCF6F9';\n}};\n        border: 2px solid ${_ref4 => {\n  let {\n    darkMode\n  } = _ref4;\n  return darkMode ? '#666' : '#FFFFFF';\n}};\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        border-radius: 20px;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 2rem;\n        gap: 0.5rem;\n        span {\n            font-size: 2.5rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n    .income-content {\n        display: flex;\n        gap: 2rem;\n        .incomes {\n            flex: 1;\n        }\n    }\n`;\n_c2 = IncomeStyled;\nexport default Income;\nvar _c, _c2;\n$RefreshReg$(_c, \"Income\");\n$RefreshReg$(_c2, \"IncomeStyled\");","map":{"version":3,"names":["React","useEffect","styled","useGlobalContext","InnerLayout","Form","IncomeItem","useDarkMode","Income","addIncome","incomes","getIncomes","deleteIncome","totalIncome","darkMode","map","income","_id","title","description","amount","date","type","category","IncomeStyled","div"],"sources":["C:/Expense Calculator Mern Stack/expense-tracker_fullstack/frontend/src/Components/Income/Income.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport { InnerLayout } from '../../styles/Layouts';\r\nimport Form from '../Form/Form';\r\nimport IncomeItem from '../IncomeItem/IncomeItem';\r\nimport { useDarkMode } from '../../path/to/your/DarkModeContext'; // Update this path\r\n\r\nfunction Income() {\r\n    const { addIncome, incomes, getIncomes, deleteIncome, totalIncome } = useGlobalContext();\r\n    const { darkMode } = useDarkMode(); // Access darkMode state from context\r\n\r\n    useEffect(() => {\r\n        getIncomes();\r\n    }, []);\r\n\r\n    return (\r\n        <IncomeStyled darkMode={darkMode}>\r\n            <InnerLayout>\r\n                <h1>Incomes</h1>\r\n                <h2 className=\"total-income\">\r\n                    Total Income: <span>â‚¹{totalIncome()}</span>\r\n                </h2>\r\n                <div className=\"income-content\">\r\n                    <div className=\"form-container\">\r\n                        <Form />\r\n                    </div>\r\n                    <div className=\"incomes\">\r\n                        {incomes.map((income) => (\r\n                            <IncomeItem\r\n                                key={income._id}\r\n                                id={income._id}\r\n                                title={income.title}\r\n                                description={income.description}\r\n                                amount={income.amount}\r\n                                date={income.date}\r\n                                type={income.type}\r\n                                category={income.category}\r\n                                indicatorColor=\"var(--color-green)\"\r\n                                deleteItem={deleteIncome}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </InnerLayout>\r\n        </IncomeStyled>\r\n    );\r\n}\r\n\r\nconst IncomeStyled = styled.div`\r\n    display: flex;\r\n    overflow: auto;\r\n    background: ${({ darkMode }) => (darkMode ? '#333' : '#FCF6F9')};\r\n    color: ${({ darkMode }) => (darkMode ? '#fff' : '#000')};\r\n    .total-income {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: ${({ darkMode }) => (darkMode ? '#444' : '#FCF6F9')};\r\n        border: 2px solid ${({ darkMode }) => (darkMode ? '#666' : '#FFFFFF')};\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        border-radius: 20px;\r\n        padding: 1rem;\r\n        margin: 1rem 0;\r\n        font-size: 2rem;\r\n        gap: 0.5rem;\r\n        span {\r\n            font-size: 2.5rem;\r\n            font-weight: 800;\r\n            color: var(--color-green);\r\n        }\r\n    }\r\n    .income-content {\r\n        display: flex;\r\n        gap: 2rem;\r\n        .incomes {\r\n            flex: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Income;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}